version: "3.9"

networks:
  back-end:
    driver: "bridge"
  front-end:
    driver: "bridge"

volumes:
  db-data: {}

services:
  db:
    container_name: db-postgres
    image: "postgres:12"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=Nhtminh09032002@
      - POSTGRES_DB=postgres
    ports:
      - "5432:5432"
    restart: always
    networks:
      - back-end
    volumes:
      - db-data:/var/lib/postgresql/data

  # Container NodeJS
  server:
    container_name: nodejs
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST=db-postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=postgres
    networks:
      - back-end
    depends_on:
      - db
      - livekit

  # caddy:
  #   image: livekit/caddyl4
  #   command: run --config /etc/caddy.yaml --adapter yaml
  #   restart: unless-stopped
  #   network_mode: "host"
  #   volumes:
  #     - ./livekit.meetClone.com/caddy.yaml:/etc/caddy.yaml
  #     - ./livekit.meetClone.com/caddy_data:/data

  livekit:
    container_name: livekit
    image: livekit/livekit-server:latest
    command: --config /etc/livekit.yaml
    restart: unless-stopped
    # network_mode: "host"
    volumes:
      - ./livekit.meetClone.com/livekit.yaml:/etc/livekit.yaml
    networks:
      - back-end
  # redis:
  #   image: redis:6-alpine
  #   command: redis-server /etc/redis.conf
  #   network_mode: "host"
  #   volumes:
  #     - ./livekit.meetClone.com/redis.conf:/etc/redis.conf
