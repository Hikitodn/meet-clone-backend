version: "3"

networks:
  back-end:
    driver: "bridge"
  front-end:
    driver: "bridge"

volumes:
  db-data: {}

services:
  db:
    container_name: db-postgres
    image: "postgres:12"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=Nhtminh09032002@
      - POSTGRES_DB=postgres
    ports:
      - "5432:5432"
    restart: always
    networks:
      - back-end
    volumes:
      - db-data:/var/lib/postgresql/data

  # Container NodeJS
  server:
    container_name: nodejs
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST=db-postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=postgres
    networks:
      - back-end
    depends_on:
      - db
      - livekit

  # livekit:
  #   container_name: livekit
  #   image: "livekit/livekit-server:latest"
  #   hostname: localhost
  #   restart: unless-stopped
  #   ports:
  #     - "7880:7880"
  #     - "7881:7881"
  #     - "7882:7882/udp"
  #   volumes:
  #     - ./backend/livekit.meet-clone/livekit.yaml:/etc/livekit.yaml
  #   command: --config /etc/livekit.yaml
  #   network_mode: host
  #   depends_on:
  #     - db
